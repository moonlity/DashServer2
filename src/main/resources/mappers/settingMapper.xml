<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.SettingMapper">
	<!-- 사용자별 대시보드 생성제한갯수확인  -->
	<select id="selectDashLimitCount" resultType="Integer">
		SELECT DASHBOARD_NUM
		FROM TB_USER
		WHERE USER_ID = #{val}
	</select>
	
	<!-- 사용자별 대시보드 목록 -->
	<select id="userDashList" resultType="DashMenuDTO" >
		SELECT 
			DASHBOARD_ID AS dashId,
			DASHBOARD_NM AS dashName,
			SORT_ORDER AS sortOrder
		FROM TB_DASHBOARD
		WHERE USER_ID = #{val}
		ORDER BY SORT_ORDER ASC
	</select>
	
	<!-- 대시보드 신규 입력한다.  -->
	<insert id="insertDashBoard" useGeneratedKeys="true"   keyProperty="dashId" parameterType="DashInsertDTO">
		INSERT
		INTO TB_DASHBOARD
		  (
		    DASHBOARD_NM,
		    USER_ID,
		    SORT_ORDER,
		    CREATE_USER_ID
		  )
		  VALUES
		  (
		    #{dashName},
		    #{userId},
		    (select nvl(max(SORT_ORDER) , 1) +1 FROM TB_DASHBOARD ALIAS_FOR_SUBQUERY where USER_ID = #{userId}),
		    #{userId}
		  )
	</insert>
	
	<!-- 대시보드 삭제 -->
	<delete id="deleteDashBoard" parameterType="HashMap">
		DELETE
		FROM TB_DASHBOARD
		WHERE DASHBOARD_ID = #{dashId} and USER_ID = #{userId} 
	</delete>
	
	<!-- 위젯 정보 삭제 -->
	<delete id="deleteWidgetVal">
	delete from TB_DASHBOARD_WIDGET where WIDGET_ID = #{widgetId} and dashboard_id = #{dashId}
	</delete>
	
	<!-- 위젯 정보 삭제 -->
	<delete id="deleteWidget" parameterType="HashMap">
	delete from TB_DASHBOARD_WIDGET where DASHBOARD_ID in 
	<foreach collection="dashList" item="dashId"  open="(" separator="," close=")">
	#{dashId}
	</foreach>
	</delete>

	<!-- 대시보드  삭제 -->
	<delete id="deleteDash" parameterType="HashMap">
	delete from TB_DASHBOARD where DASHBOARD_ID in 
	<foreach collection="dashList" item="dashId"  open="(" separator="," close=")">
	#{dashId}
	</foreach>
	</delete>
	
	<!-- 대시보드이름을 수정한다. -->
	<update id="updateDashName" parameterType = "DashMenuDTO">
		update TB_DASHBOARD 
		set DASHBOARD_NM = #{dashName}
		, UPDATE_USER_ID = #{userId} 
		where DASHBOARD_ID = #{dashId}
	</update>
	
	<update id="updateDashWidget"  parameterType = "WidgetInfoDTO">
	UPDATE TB_DASHBOARD_WIDGET
		SET 
		 WIDGET_WIDTH        = #{curWidth},
		 WIDGET_HEIGHT       = #{curHeight},
		 WIDGET_X_COORDINATE = #{curx},
		 WIDGET_Y_COORDINATE = #{cury},
		 UPDATE_USER_ID = = #{userId},
		 UPDATE_DATE         = sysdate
		WHERE DASHBOARD_ID      = #{dashId}
		AND WIDGET_ID           = #{widgetId}
	</update>
	
		<!-- 대시보드별 위젯정보 신규 입력한다.  -->
	<insert id="insertDashBoardWidget" parameterType="HashMap">
	INSERT
		INTO TB_DASHBOARD_WIDGET
		  (
		    DASHBOARD_ID,
		    WIDGET_ID,
		    WIDGET_WIDTH,
		    WIDGET_HEIGHT,
		    WIDGET_X_COORDINATE,
		    WIDGET_Y_COORDINATE,
		    WIDGET_ORDER,
		    CREATE_USER_ID
		  )
		  VALUES
		  (
		    #{dashId},
		    #{widgetId},
		    #{curWidth},
		    #{curHeight},
		    #{curx},
		    #{cury},
		    (SELECT NVL(MAX(widget_order),1) FROM TB_DASHBOARD_WIDGET WHERE DASHBOARD_ID = #{dashId}),
		    #{userId}
		  )
	</insert>	
	
	<!-- 이용가능 위젯가져오기  -->
  	<select id="getWedgetList"  resultType="DashWidgetDTO" parameterType="HashMap">
  		<bind name="pattern" value="'%' + search + '%'" />
		SELECT 
			WIDGET_ID AS widgetId, 
			WIDGET_NM AS widgetNm, 
			DEFAULT_WIDTH AS defaultWidth, 
			DEFAULT_HEIGHT AS defaultHeight, 
			MIN_WIDTH AS minWidth, 
			MIN_HEIGHT AS minHeight, 
			MAX_WIDTH AS maxWidth, 
			MAX_HEIGHT AS maxHeight, 
			WIDGET_IMG  AS widgetImg
		FROM tb_widget
		WHERE use_yn = 'Y' 
		AND WIDGET_NM LIKE #{pattern}
		ORDER BY SORT_ORDER
		LIMIT #{offset},  #{size}
  </select>
  
  	 <!-- 이용가능 위젯가져오기 전체 갯수  -->
  <select id="getWidgetCount"  resultType="int" parameterType="HashMap">
  	<bind name="pattern" value="'%' + search + '%'" />
	SELECT 
		count(*)
	FROM tb_widget
	WHERE use_yn = 'Y' 
	AND WIDGET_NM LIKE #{pattern}
	ORDER BY SORT_ORDER
  </select>
  
   <!-- 현재 이용중인 위젯정보 가져오기 -->
  <select id="getSettingDashAbleWidget"  resultType="DashWidgetDTO" parameterType="Integer">
	SELECT DISTINCT aa.DASHBOARD_ID as dashId ,
	  aa.WIDGET_ID           AS widgetId,
	  aa.WIDGET_WIDTH        AS curWidth,
	  aa.WIDGET_HEIGHT       AS curHeight,
	  aa.WIDGET_X				 AS curx,
	  aa.WIDGET_Y 				 AS cury,
	  bb.DEFAULT_WIDTH       AS defaulwdth,
	  bb.DEFAULT_HEIGHT      AS defaultHeight,
	  bb.MIN_WIDTH           AS minWidth,
	  bb.MIN_HEIGHT          AS minHeight,
	  bb.MAX_WIDTH           AS maxWidth,
	  bb.MAX_HEIGHT          AS maxHeight,
	  bb.WIDGET_NM           AS widgetNm,
	  bb.WIDGET_IMG			 AS widgetImg
	FROM TB_DASHBOARD_WIDGET aa
	INNER JOIN TB_WIDGET bb
	ON aa.WIDGET_ID = bb.WIDGET_ID
	WHERE aa.DASHBOARD_ID = #{val}
	ORDER BY aa.WIDGET_ID	
  </select>
</mapper>